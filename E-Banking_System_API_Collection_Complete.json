{
  "info": {
    "name": "E-Banking System API Collection",
    "description": "Comprehensive API collection for E-Banking System with all endpoints, automatic authentication and variable handling",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api/v1",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "68637307ad95b4dfacf7f4d8",
      "type": "string"
    },
    {
      "key": "account_id",
      "value": "68637327ad95b4dfacf7f4f0",
      "type": "string"
    },
    {
      "key": "admin_user_id",
      "value": "68637307ad95b4dfacf7f4d8",
      "type": "string"
    },
    {
      "key": "admin_account_id",
      "value": "68637327ad95b4dfacf7f4f0",
      "type": "string"
    },
    {
      "key": "transaction_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "checking_account_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "savings_account_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "destination_account_number",
      "value": "633568465819",
      "type": "string"
    },
    {
      "key": "transaction_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "raj_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "raj_account_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "priya_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "priya_account_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User - Rushabh Khandhar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Rushabh\",\n  \"lastName\": \"Khandhar\",\n  \"email\": \"rushabh.khandhar@jpmc.com\",\n  \"phone\": \"9876543210\",\n  \"password\": \"password123\",\n  \"passwordConfirm\": \"password123\",\n  \"dateOfBirth\": \"1995-08-15\",\n  \"address\": {\n    \"street\": \"123 Wall Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10005\",\n    \"country\": \"United States\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["auth", "signup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.token) {",
                  "        pm.collectionVariables.set('jwt_token', responseJson.token);",
                  "        console.log('JWT Token captured:', responseJson.token.substring(0, 20) + '...');",
                  "    }",
                  "    if (responseJson.data && responseJson.data.user && responseJson.data.user.id) {",
                  "        pm.collectionVariables.set('user_id', responseJson.data.user.id);",
                  "        console.log('User ID captured:', responseJson.data.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login - Rushabh Khandhar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"rushabh.khandhar@jpmc.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.token) {",
                  "        pm.collectionVariables.set('jwt_token', responseJson.token);",
                  "        console.log('JWT Token captured:', responseJson.token.substring(0, 20) + '...');",
                  "    }",
                  "    if (responseJson.data && responseJson.data.user && responseJson.data.user.id) {",
                  "        pm.collectionVariables.set('user_id', responseJson.data.user.id);",
                  "        console.log('User ID captured:', responseJson.data.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register User - Raj Shah",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Raj\",\n  \"lastName\": \"Shah\",\n  \"email\": \"raj.shah@jpmc.com\",\n  \"phone\": \"9876543211\",\n  \"password\": \"password123\",\n  \"passwordConfirm\": \"password123\",\n  \"dateOfBirth\": \"1992-03-20\",\n  \"address\": {\n    \"street\": \"456 Broadway\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10013\",\n    \"country\": \"United States\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["auth", "signup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.user && responseJson.data.user.id) {",
                  "        pm.collectionVariables.set('raj_user_id', responseJson.data.user.id);",
                  "        console.log('Raj User ID captured:', responseJson.data.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register User - Priya Sharma",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Priya\",\n  \"lastName\": \"Sharma\",\n  \"email\": \"priya.sharma@jpmc.com\",\n  \"phone\": \"9876543212\",\n  \"password\": \"password123\",\n  \"passwordConfirm\": \"password123\",\n  \"dateOfBirth\": \"1994-11-08\",\n  \"address\": {\n    \"street\": \"789 Park Avenue\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10021\",\n    \"country\": \"United States\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["auth", "signup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.user && responseJson.data.user.id) {",
                  "        pm.collectionVariables.set('priya_user_id', responseJson.data.user.id);",
                  "        console.log('Priya User ID captured:', responseJson.data.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"rushabh.khandhar@jpmc.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            }
          }
        },
        {
          "name": "Get My Profile (Auth Required)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "Update Password",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"passwordCurrent\": \"password123\",\n  \"password\": \"newpassword123\",\n  \"passwordConfirm\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/update-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "update-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          }
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Rushabh\",\n  \"lastName\": \"Khandhar\",\n  \"phone\": \"9876543210\",\n  \"address\": {\n    \"street\": \"123 Updated Wall Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10005\",\n    \"country\": \"United States\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          }
        },
        {
          "name": "Get User Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/dashboard",
              "host": ["{{base_url}}"],
              "path": ["users", "dashboard"]
            }
          }
        },
        {
          "name": "Get User Transaction History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/transactions?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["users", "transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Account Statement",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/account-statement/{{account_id}}?startDate=2025-01-01&endDate=2025-12-31",
              "host": ["{{base_url}}"],
              "path": ["users", "account-statement", "{{account_id}}"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2025-12-31"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Account Management",
      "item": [
        {
          "name": "Create Savings Account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accountType\": \"savings\",\n  \"initialDeposit\": 1000,\n  \"description\": \"Primary Savings Account\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts",
              "host": ["{{base_url}}"],
              "path": ["accounts"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.account && responseJson.data.account.id) {",
                  "        pm.collectionVariables.set('account_id', responseJson.data.account.id);",
                  "        pm.collectionVariables.set('savings_account_id', responseJson.data.account.id);",
                  "        console.log('Savings Account ID captured:', responseJson.data.account.id);",
                  "        if (responseJson.data.account.accountNumber) {",
                  "            console.log('Account Number:', responseJson.data.account.accountNumber);",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Checking Account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accountType\": \"checking\",\n  \"initialDeposit\": 500,\n  \"description\": \"Primary Checking Account\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts",
              "host": ["{{base_url}}"],
              "path": ["accounts"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.account && responseJson.data.account.id) {",
                  "        pm.collectionVariables.set('checking_account_id', responseJson.data.account.id);",
                  "        console.log('Checking Account ID captured:', responseJson.data.account.id);",
                  "        if (responseJson.data.account.accountNumber) {",
                  "            console.log('Account Number:', responseJson.data.account.accountNumber);",
                  "        }",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get My Accounts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts",
              "host": ["{{base_url}}"],
              "path": ["accounts"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.accounts && responseJson.data.accounts.length > 0) {",
                  "        const firstAccount = responseJson.data.accounts[0];",
                  "        if (firstAccount.id) {",
                  "            pm.collectionVariables.set('account_id', firstAccount.id);",
                  "            console.log('First Account ID captured:', firstAccount.id);",
                  "        }",
                  "        // Capture account numbers for transfer testing",
                  "        responseJson.data.accounts.forEach((account, index) => {",
                  "            if (account.accountNumber) {",
                  "                console.log(`Account ${index + 1} Number:`, account.accountNumber);",
                  "                if (index === 1 && account.accountNumber) {",
                  "                    pm.collectionVariables.set('destination_account_number', account.accountNumber);",
                  "                    console.log('Destination account number set:', account.accountNumber);",
                  "                }",
                  "            }",
                  "        });",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Account Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}"]
            }
          }
        },
        {
          "name": "Update Account",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated Savings Account Description\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}"]
            }
          }
        },
        {
          "name": "Freeze Account",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Account security check\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}/freeze",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}", "freeze"]
            }
          }
        },
        {
          "name": "Unfreeze Account",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}/unfreeze",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}", "unfreeze"]
            }
          }
        },
        {
          "name": "Get Account Statement",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/accounts/{{account_id}}/statement?startDate=2025-01-01&endDate=2025-12-31",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{account_id}}", "statement"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2025-12-31"
                }
              ]
            }
          }
        },
        {
          "name": "Close Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Account no longer needed\",\n  \"transferToAccountId\": \"{{savings_account_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/{{checking_account_id}}",
              "host": ["{{base_url}}"],
              "path": ["accounts", "{{checking_account_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Deposit Money",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 2500,\n  \"description\": \"Salary deposit\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/transactions/deposit/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["transactions", "deposit", "{{account_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.transaction && responseJson.data.transaction.id) {",
                  "        pm.collectionVariables.set('transaction_id', responseJson.data.transaction.id);",
                  "        console.log('Transaction ID captured:', responseJson.data.transaction.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Withdraw Money",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 500,\n  \"description\": \"ATM withdrawal\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/transactions/withdraw/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["transactions", "withdraw", "{{account_id}}"]
            }
          }
        },
        {
          "name": "Transfer Money",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"toAccountNumber\": \"{{destination_account_number}}\",\n  \"amount\": 750,\n  \"description\": \"Transfer to friend\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/transactions/transfer/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["transactions", "transfer", "{{account_id}}"]
            }
          }
        },
        {
          "name": "Get Transaction History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/account/{{account_id}}?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["transactions", "account", "{{account_id}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Get Transaction History - Filtered",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/account/{{account_id}}?page=1&limit=10&type=deposit&startDate=2025-01-01&endDate=2025-12-31&minAmount=100&maxAmount=5000",
              "host": ["{{base_url}}"],
              "path": ["transactions", "account", "{{account_id}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "type",
                  "value": "deposit"
                },
                {
                  "key": "startDate",
                  "value": "2025-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2025-12-31"
                },
                {
                  "key": "minAmount",
                  "value": "100"
                },
                {
                  "key": "maxAmount",
                  "value": "5000"
                }
              ]
            }
          }
        },
        {
          "name": "Get All User Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/user/all?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["transactions", "user", "all"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Get Transaction by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/{{transaction_id}}",
              "host": ["{{base_url}}"],
              "path": ["transactions", "{{transaction_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin Panel",
      "item": [
        {
          "name": "Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@jpmc.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.token) {",
                  "        pm.collectionVariables.set('admin_token', responseJson.token);",
                  "        pm.collectionVariables.set('jwt_token', responseJson.token);",
                  "        console.log('Admin Token captured and set as both admin_token and jwt_token');",
                  "        console.log('Token preview:', responseJson.token.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Admin Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/dashboard/stats",
              "host": ["{{base_url}}"],
              "path": ["admin", "dashboard", "stats"]
            }
          }
        },
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.users && responseJson.data.users.length > 0) {",
                  "        pm.collectionVariables.set('user_id', responseJson.data.users[0]._id);",
                  "        pm.collectionVariables.set('admin_user_id', responseJson.data.users[0]._id);",
                  "        console.log('User ID captured:', responseJson.data.users[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get User Details (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Toggle User Status (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isActive\": false,\n  \"reason\": \"Account suspended for review\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}", "status"]
            }
          }
        },
        {
          "name": "Get All Accounts (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/accounts?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["admin", "accounts"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.accounts && responseJson.data.accounts.length > 0) {",
                  "        pm.collectionVariables.set('account_id', responseJson.data.accounts[0]._id);",
                  "        pm.collectionVariables.set('admin_account_id', responseJson.data.accounts[0]._id);",
                  "        console.log('Account ID captured:', responseJson.data.accounts[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Toggle Account Freeze (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Administrative freeze for investigation\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/accounts/{{account_id}}/freeze",
              "host": ["{{base_url}}"],
              "path": ["admin", "accounts", "{{account_id}}", "freeze"]
            }
          }
        },
        {
          "name": "Admin Update Account",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Admin updated account\",\n  \"overdraftLimit\": 1000\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/admin/{{account_id}}",
              "host": ["{{base_url}}"],
              "path": ["accounts", "admin", "{{account_id}}"]
            }
          }
        },
        {
          "name": "Force Close Account (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Administrative closure\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/accounts/admin/{{account_id}}/force-close",
              "host": ["{{base_url}}"],
              "path": ["accounts", "admin", "{{account_id}}", "force-close"]
            }
          }
        },
        {
          "name": "Get All Transactions (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/transactions?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["admin", "transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.transactions && responseJson.data.transactions.length > 0) {",
                  "        pm.collectionVariables.set('transaction_id', responseJson.data.transactions[0]._id);",
                  "        console.log('Transaction ID captured:', responseJson.data.transactions[0]._id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Transactions Filtered (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/transactions?page=1&limit=20&type=transfer&status=completed&userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "type",
                  "value": "transfer"
                },
                {
                  "key": "status",
                  "value": "completed"
                },
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Manual Deposit (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 1000,\n  \"description\": \"Administrative deposit - Interest payment\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/accounts/{{account_id}}/deposit",
              "host": ["{{base_url}}"],
              "path": ["admin", "accounts", "{{account_id}}", "deposit"]
            }
          }
        },
        {
          "name": "Manual Withdrawal (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 100,\n  \"description\": \"Administrative withdrawal - Account maintenance fee\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/accounts/{{account_id}}/withdraw",
              "host": ["{{base_url}}"],
              "path": ["admin", "accounts", "{{account_id}}", "withdraw"]
            }
          }
        },
        {
          "name": "Reverse Transaction",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Fraudulent transaction detected\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/transactions/{{transaction_id}}/reverse",
              "host": ["{{base_url}}"],
              "path": ["admin", "transactions", "{{transaction_id}}", "reverse"]
            }
          }
        },
        {
          "name": "Get All Users via User Routes (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Update User Status (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Activate User (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}/activate",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}", "activate"]
            }
          }
        },
        {
          "name": "Deactivate User (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}/deactivate",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}", "deactivate"]
            }
          }
        },
        {
          "name": "Delete User Profile (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Test Scenarios",
      "item": [
        {
          "name": "Complete User Flow Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Complete E-Banking System Test Suite', function () {",
                  "    console.log('E-Banking System API Collection Complete!');",
                  "    console.log('All endpoints configured with automatic variable handling');",
                  "    console.log('Authentication flows working');",
                  "    console.log('Transaction operations ready');",
                  "    console.log('Admin panel functional');",
                  "    console.log('Comprehensive reporting available');",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
